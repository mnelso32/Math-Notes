LIB "primdec.lib";
intvec w=(3,5,6,7,8,10,11,12,13,14,16,17,18,19,20,22,23,24,26,28,29,30,31,32);
ring A=0,(x3,x5,x6,x7,x8,x10,x11,x12,x13,x14,x16,x17,x18,x19,x20,x22,x23,x24,x26,x28,x29,x30,x31,x32),wp(w);
ideal I= 

x3*x3-x6,x3*x5-x8,x3*x7-x10,x3*x11-x14,x3*x13-x16,x3*x17-x20,x3*x19-x22,x3*x23-x26,x3*x29-x32,

x5*x5-x10,x5*x7-x12,x5*x11-x16,x5*x13-x18,x5*x17-x22,x5*x19-x24,x5*x23-x28,

x7*x7-x14,x7*x11-x18,x7*x13-x20,x7*x17-x24,x7*x19-x26,

x11*x11-x22,x11*x13-x24,x11*x17-x28,

x13*x13-x26,x13*x19-x32;

I=std(I);
dim(I); \\ dim(I)=5
homog(I); \\ ideal is homogeneous w.r.t. weights
option(prot);
int t=timer;
system("--ticks-per-sec", 100); // give time in 1/100 sec
minAssGTZ(I); // 2 minimal associated primes


ideal P = minAssGTZ(I)[1];
P=std(P);
P;

P[1]=x3^2-x6
P[2]=x3*x5-x8
P[3]=x3*x7-x10
P[4]=x5^2-x10
P[5]=x5*x6-x3*x8
P[6]=x5*x7-x12
P[7]=x5*x8-x3*x10
P[8]=x6*x7-x3*x10
P[9]=x3*x11-x14
P[10]=x7^2-x14
P[11]=x5*x10-x3*x12
P[12]=x7*x8-x3*x12
P[13]=x3*x13-x16
P[14]=x5*x11-x16
P[15]=x8^2-x6*x10
P[16]=x5*x12-x3*x14
P[17]=x6*x11-x3*x14
P[18]=x7*x10-x3*x14
P[19]=x5*x13-x18
P[20]=x7*x11-x18
P[21]=x8*x10-x6*x12
P[22]=x5*x14-x3*x16
P[23]=x6*x13-x3*x16
P[24]=x7*x12-x3*x16
P[25]=x8*x11-x3*x16
P[26]=x3*x17-x20
P[27]=x7*x13-x20
P[28]=x8*x12-x6*x14
P[29]=x10^2-x6*x14
P[30]=x5*x16-x3*x18
P[31]=x7*x14-x3*x18
P[32]=x8*x13-x3*x18
P[33]=x10*x11-x3*x18
P[34]=x3*x19-x22
P[35]=x5*x17-x22
P[36]=x8*x14-x6*x16
P[37]=x10*x12-x6*x16
P[38]=x11^2-x22
P[39]=x5*x18-x3*x20
P[40]=x6*x17-x3*x20
P[41]=x7*x16-x3*x20
P[42]=x10*x13-x3*x20
P[43]=x11*x12-x3*x20
P[44]=x5*x19-x24
P[45]=x7*x17-x24
P[46]=x8*x16-x6*x18
P[47]=x10*x14-x6*x18
P[48]=x11*x13-x24
P[49]=x12^2-x6*x18
P[50]=x5*x20-x3*x22
P[51]=x6*x19-x3*x22
P[52]=x7*x18-x3*x22
P[53]=x8*x17-x3*x22
P[54]=x11*x14-x3*x22
P[55]=x12*x13-x3*x22
P[56]=x3*x23-x26
P[57]=x7*x19-x26
P[58]=x8*x18-x6*x20
P[59]=x10*x16-x6*x20
P[60]=x12*x14-x6*x20
P[61]=x13^2-x26
P[62]=x5*x22-x3*x24
P[63]=x7*x20-x3*x24
P[64]=x8*x19-x3*x24
P[65]=x10*x17-x3*x24
P[66]=x11*x16-x3*x24
P[67]=x13*x14-x3*x24
P[68]=x5*x23-x28
P[69]=x8*x20-x6*x22
P[70]=x10*x18-x6*x22
P[71]=x11*x17-x28
P[72]=x12*x16-x6*x22
P[73]=x14^2-x6*x22
P[74]=x5*x24-x3*x26
P[75]=x6*x23-x3*x26
P[76]=x7*x22-x3*x26
P[77]=x10*x19-x3*x26
P[78]=x11*x18-x3*x26
P[79]=x12*x17-x3*x26
P[80]=x13*x16-x3*x26
P[81]=x8*x22-x6*x24
P[82]=x10*x20-x6*x24
P[83]=x11*x19-x7*x23
P[84]=x12*x18-x6*x24
P[85]=x13*x17-x7*x23
P[86]=x14*x16-x6*x24
P[87]=x5*x26-x3*x28
P[88]=x7*x24-x3*x28
P[89]=x8*x23-x3*x28
P[90]=x11*x20-x3*x28
P[91]=x12*x19-x3*x28
P[92]=x13*x18-x3*x28
P[93]=x14*x17-x3*x28
P[94]=x3*x29-x32
P[95]=x8*x24-x6*x26
P[96]=x10*x22-x6*x26
P[97]=x12*x20-x6*x26
P[98]=x13*x19-x32
P[99]=x14*x18-x6*x26
P[100]=x16^2-x6*x26
P[101]=x7*x26-x5*x28
P[102]=x10*x23-x5*x28
P[103]=x11*x22-x5*x28
P[104]=x13*x20-x5*x28
P[105]=x14*x19-x5*x28
P[106]=x16*x17-x5*x28
P[107]=x8*x26-x6*x28
P[108]=x10*x24-x6*x28
P[109]=x11*x23-x5*x29
P[110]=x12*x22-x6*x28
P[111]=x14*x20-x6*x28
P[112]=x16*x18-x6*x28
P[113]=x17^2-x5*x29
P[114]=x6*x29-x3*x32
P[115]=x7*x28-x3*x32
P[116]=x11*x24-x7*x28
P[117]=x12*x23-x7*x28
P[118]=x13*x22-x3*x32
P[119]=x16*x19-x3*x32
P[120]=x17*x18-x3*x32
P[121]=x10*x26-x8*x28
P[122]=x12*x24-x8*x28
P[123]=x13*x23-x7*x29
P[124]=x14*x22-x8*x28
P[125]=x16*x20-x8*x28
P[126]=x17*x19-x7*x29
P[127]=x18^2-x8*x28
P[128]=x8*x29-x5*x32
P[129]=x11*x26-x5*x32
P[130]=x13*x24-x5*x32
P[131]=x14*x23-x5*x32
P[132]=x17*x20-x5*x32
P[133]=x18*x19-x5*x32
P[134]=x10*x28-x6*x32
P[135]=x12*x26-x6*x32
P[136]=x14*x24-x6*x32
P[137]=x16*x22-x6*x32
P[138]=x18*x20-x6*x32
P[139]=x10*x29-x7*x32
P[140]=x11*x28-x7*x32
P[141]=x13*x26-x7*x32
P[142]=x16*x23-x7*x32
P[143]=x17*x22-x7*x32
P[144]=x19*x20-x7*x32
P[145]=x12*x28-x8*x32
P[146]=x14*x26-x8*x32
P[147]=x16*x24-x8*x32
P[148]=x17*x23-x11*x29
P[149]=x18*x22-x8*x32
P[150]=x20^2-x8*x32
P[151]=x13*x28-x12*x29
P[152]=x17*x24-x12*x29
P[153]=x18*x23-x12*x29
P[154]=x19*x22-x12*x29
P[155]=x14*x28-x10*x32
P[156]=x16*x26-x10*x32
P[157]=x18*x24-x10*x32
P[158]=x19*x23-x13*x29
P[159]=x20*x22-x10*x32
P[160]=x14*x29-x11*x32
P[161]=x17*x26-x11*x32
P[162]=x19*x24-x11*x32
P[163]=x20*x23-x11*x32
P[164]=x16*x28-x12*x32
P[165]=x18*x26-x12*x32
P[166]=x20*x24-x12*x32
P[167]=x22^2-x12*x32
P[168]=x16*x29-x13*x32
P[169]=x17*x28-x13*x32
P[170]=x19*x26-x13*x32
P[171]=x22*x23-x13*x32
P[172]=x18*x28-x14*x32
P[173]=x20*x26-x14*x32
P[174]=x22*x24-x14*x32
P[175]=x23^2-x17*x29
P[176]=x19*x28-x18*x29
P[177]=x23*x24-x18*x29
P[178]=x20*x28-x16*x32
P[179]=x22*x26-x16*x32
P[180]=x24^2-x16*x32
P[181]=x20*x29-x17*x32
P[182]=x23*x26-x17*x32
P[183]=x22*x28-x18*x32
P[184]=x24*x26-x18*x32
P[185]=x22*x29-x19*x32
P[186]=x23*x28-x19*x32
P[187]=x24*x28-x20*x32
P[188]=x26^2-x20*x32
P[189]=x26*x28-x22*x32
P[190]=x26*x29-x23*x32
P[191]=x28^2-x24*x32
P[192]=x19^3-x28*x29
P[193]=x5*x28*x29-x7*x23*x32
P[194]=x12*x29^2-x19^2*x32

dim(P); // dim(P)=4

ideal Q = minAssGTZ(I)[2];
Q=std(Q);
Q; 

Q[1]=x3
Q[2]=x5
Q[3]=x6
Q[4]=x7
Q[5]=x8
Q[6]=x10
Q[7]=x11
Q[8]=x12
Q[9]=x13
Q[10]=x14
Q[11]=x16
Q[12]=x18
Q[13]=x20
Q[14]=x22
Q[15]=x24
Q[16]=x26
Q[17]=x28
Q[18]=x32


// missing x17,x19,x23,x29,x30,x31

dim(Q); // dim(Q)=6

// (13,17,19) ~ (7,23,19) ~ (13,13,23)

primdecGTZ(I); // four associated primes

