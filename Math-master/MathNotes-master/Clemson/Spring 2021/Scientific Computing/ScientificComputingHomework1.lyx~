#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{tikz}
\usetikzlibrary{matrix,arrows,decorations.pathmorphing}
\usetikzlibrary{shapes.geometric}
\usepackage{tikz-cd}
\usepackage{amsthm}
\usepackage{xparse,etoolbox}

\theoremstyle{plain}
\newtheorem{theorem}{Theorem}[section]
\newtheorem{lemma}[theorem]{Lemma}
\newtheorem{prop}{Proposition}[section]
\newtheorem{cor}{Corollary}
\newtheorem{conj}{Conjecture}
\theoremstyle{definition}
\newtheorem{defn}{Definition}[section]
\newtheorem{ex}{Exercise}
\newtheorem{sol}{Solution} 
\newtheorem{example}{Example}[section]
\theoremstyle{remark}
\newtheorem{rem}{Remark}
\newtheorem{note}{Note}
\newtheorem{case}{Case}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{tikz-cd}
\usetikzlibrary{calc,arrows,decorations.pathreplacing}
\tikzset{mydot/.style={circle,fill,inner sep=1.5pt},
commutative diagrams/.cd,
  arrow style=tikz,
  diagrams={>=latex},
}

\usepackage{babel}
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    citecolor=blue,
    filecolor=blue,
    linkcolor=blue,
    urlcolor=blue
}
\usepackage{pgfplots}
\usetikzlibrary{decorations.markings}
\pgfplotsset{compat=1.9}


\newcommand{\blocktheorem}[1]{%
  \csletcs{old#1}{#1}% Store \begin
  \csletcs{endold#1}{end#1}% Store \end
  \RenewDocumentEnvironment{#1}{o}
    {\par\addvspace{1.5ex}
     \noindent\begin{minipage}{\textwidth}
     \IfNoValueTF{##1}
       {\csuse{old#1}}
       {\csuse{old#1}[##1]}}
    {\csuse{endold#1}
     \end{minipage}
     \par\addvspace{1.5ex}}
}

\raggedbottom

\blocktheorem{theorem}% Make theo into a block
\blocktheorem{defn}% Make defi into a block
\blocktheorem{lemma}% Make lem into a block
\blocktheorem{rem}% Make rem into a block
\blocktheorem{cor}% Make col into a block
\blocktheorem{prop}% Make prop into a block


\makeatletter
\newcommand*{\@old@slash}{}\let\@old@slash\slash
\def\slash{\relax\ifmmode\delimiter"502F30E\mathopen{}\else\@old@slash\fi}
\makeatother

\def\backslash{\delimiter"526E30F\mathopen{}}



\usepackage[bottom]{footmisc}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding iso8859-15
\fontencoding global
\font_roman "palatino" "default"
\font_sans "lmss" "default"
\font_typewriter "lmtt" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf true
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize custom
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\paperwidth 30cm
\paperheight 35cm
\topmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Scientific Computing Homework 1
\end_layout

\begin_layout Author
Michael Nelson
\end_layout

\begin_layout Subsection*
Problem 1
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{ex}
\backslash
label{ex}
\end_layout

\end_inset

 We consider the example from class for approximating 
\begin_inset Formula $f'(2)$
\end_inset

 for 
\begin_inset Formula $f(x)=\sin x$
\end_inset

 using a finite difference approximation.
 This time, we will be using
\begin_inset Formula 
\[
f'(x_{0})\approx\frac{f(x_{0}+h)-f(x_{0}-h)}{2h}
\]

\end_inset

instead.
 Show using Taylor's Theorem that you expect the truncation error of this
 approximation to be 
\begin_inset Formula $O(h^{2})$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{ex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{sol}
\backslash
label{sol}
\end_layout

\end_inset

 By Taylor's Theorem, there exists 
\begin_inset Formula $c,d\in[x_{0}-h,x_{0}+h]$
\end_inset

 such that
\begin_inset Formula 
\begin{align*}
f(x_{0}+h) & =f(x_{0})+f'(x_{0})h+\frac{f''(x_{0})}{2}h^{2}+\frac{f'''(c)}{6}h^{3}\\
f(x_{0}-h) & =f(x_{0})-f'(x_{0})h+\frac{f''(x_{0})}{2}h^{2}-\frac{f'''(d)}{6}h^{3}.
\end{align*}

\end_inset

Subtracting these gives us
\begin_inset Formula 
\[
f(x_{0}+h)-f(x_{0}-h)=2f'(x_{0})h+\frac{1}{6}(f'''(c)+f'''(d))h^{3}.
\]

\end_inset

Rearranging terms gives us
\begin_inset Formula 
\[
f'(x_{0})-\frac{f(x_{0}+h)-f(x_{0}-h)}{2h}=\frac{1}{6}(f'''(c)+f'''(d))h^{2}.
\]

\end_inset

This implies the truncation error of this approximation is 
\begin_inset Formula $O(h^{2})$
\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{sol}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Problem 2
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{ex}
\backslash
label{ex}
\end_layout

\end_inset

 Modify the MATLAB example from the lecture to use the approximation in
 1) and produce a convergence table (include a third column with the computation
 of the rate by dividing two consecutive errors, respectively).
 Finally, show the error plot in log-log scale and include a second line
 defined by 
\begin_inset Formula $h^{2}$
\end_inset

 to confirm the quadratic behavior.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{ex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{sol}
\backslash
label{sol}
\end_layout

\end_inset

 We give the code below
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

format longg
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

f= @(x) sin(x);
\end_layout

\begin_layout Plain Layout

x0 = 2;
\end_layout

\begin_layout Plain Layout

ref = cos(2);
\end_layout

\begin_layout Plain Layout

hs = 10.^(-(1:16));
\end_layout

\begin_layout Plain Layout

errors = [];
\end_layout

\begin_layout Plain Layout

derivatives = [];
\end_layout

\begin_layout Plain Layout

errorrates=[];
\end_layout

\begin_layout Plain Layout

for h = hs
\end_layout

\begin_layout Plain Layout

	derivative = (f(x0+h)-f(x0-h))/(2*h);
\end_layout

\begin_layout Plain Layout

	error = abs(ref - derivative);
\end_layout

\begin_layout Plain Layout

	derivatives = [derivatives derivative];
\end_layout

\begin_layout Plain Layout

	errors = [errors error];
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

for i=1:15
\end_layout

\begin_layout Plain Layout

	errorrate = errors(i+1)/errors(i)
\end_layout

\begin_layout Plain Layout

	disp([i errorrate]);
\end_layout

\begin_layout Plain Layout

	errorrates = [errorrates errorrate];
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

for i=1:15
\end_layout

\begin_layout Plain Layout

	disp([i derivatives(i) errors(i) errorrates(i)]);
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

hs2 = 10.^(-(2:2:32));
\end_layout

\begin_layout Plain Layout

loglog(hs,errors,'o-',hs,hs2, '--',hs,hs,'--')
\end_layout

\end_inset


\end_layout

\begin_layout Standard
MATLAB outputs
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

1        -0.415453605192704      0.000693231354438606        0.0100049512877535
\end_layout

\begin_layout Plain Layout

2         -0.41613990080121      6.93574593230162e-06        0.0100000526090672
\end_layout

\begin_layout Plain Layout

3        -0.416146767189318      6.93578242061399e-08       0.00998886712788655
\end_layout

\begin_layout Plain Layout

4        -0.416146835854336      6.92806090274445e-10       0.00965379149928869
\end_layout

\begin_layout Plain Layout

5        -0.416146836540454      6.68820554494687e-12         0.170022575611699
\end_layout

\begin_layout Plain Layout

6        -0.416146836546005      1.13714593297232e-12          98.6324139614352
\end_layout

\begin_layout Plain Layout

7        -0.416146836434983      1.12159448395488e-10          25.7465336293019
\end_layout

\begin_layout Plain Layout

8        -0.416146833659425      2.88771700995838e-09          20.1455160404598
\end_layout

\begin_layout Plain Layout

9        -0.416146894721692      5.81745493444252e-08          4.81686850052599
\end_layout

\begin_layout Plain Layout

10        -0.416147116766297      2.80219154269457e-07          6.92396242539031
\end_layout

\begin_layout Plain Layout

11        -0.416144896320247      1.94022689503637e-06          10.4442597148631
\end_layout

\begin_layout Plain Layout

12         -0.41616710078074      2.02642335975223e-05          18.1755615502931
\end_layout

\begin_layout Plain Layout

13        -0.415778522722121      0.000368313825021283         0.507169904036325
\end_layout

\begin_layout Plain Layout

14        -0.416333634234434      0.000186797687291296          147.586291501278
\end_layout

\begin_layout Plain Layout

15        -0.388578058618805        0.0275687779283377          15.0948597587051
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next we give the plot below:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename C:/Users/Cohom/Documents/MATLAB/conv.jpg
	lyxscale 50
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{sol}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Problem 3
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{ex}
\backslash
label{ex}
\end_layout

\end_inset

 On paper, compute the binary representation of the decimal number 
\begin_inset Formula $0.1$
\end_inset

 and show that the representation is infinite (that you need an infinite
 number of binary digits to express 
\begin_inset Formula $0.1$
\end_inset

 exactly).
 Are there binary numbers with a finite number of digits that only have
 an infinite representation in decimal? Why or why not?
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{ex}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{sol}
\backslash
label{sol}
\end_layout

\end_inset

 Observe that
\begin_inset Formula 
\begin{align*}
\frac{1}{10} & =\frac{1}{15}+\frac{1}{30}\\
 & =\left(\frac{16}{15}-1\right)+\frac{1}{2}\left(\frac{16}{15}-1\right)\\
 & =\left(\frac{1}{1-2^{-4}}-1\right)+\frac{1}{2}\left(\frac{1}{1-2^{-4}}-1\right)\\
 & =\sum_{n=1}^{\infty}2^{-4n}+\sum_{n=1}^{\infty}2^{-4n-1}
\end{align*}

\end_inset

Thus a binary represenation of 
\begin_inset Formula $1/10$
\end_inset

 starts out as
\begin_inset Formula 
\[
0.00011000110001100011\dots
\]

\end_inset

Notice that this is not the only binary representation of 
\begin_inset Formula $1/10$
\end_inset

.
 Indeed, since
\begin_inset Formula 
\begin{align*}
\frac{1}{10} & =\sum_{i=1}^{\infty}2^{-4i}+\sum_{i=1}^{\infty}2^{-4i-1}\\
 & =2^{-4}+\sum_{i=2}^{\infty}2^{-4i}+\sum_{i=1}^{\infty}2^{-4i-1}\\
 & =\sum_{i=5}^{\infty}2^{-i}+\sum_{i=2}^{\infty}2^{-4i}+\sum_{i=1}^{\infty}2^{-4i-1},
\end{align*}

\end_inset

we see (after combining terms) that another binary representation of 
\begin_inset Formula $1/10$
\end_inset

 starts out as
\begin_inset Formula 
\[
0.00010110101101011110\dots
\]

\end_inset


\end_layout

\begin_layout Standard
However note that all binary representations of 
\begin_inset Formula $1/10$
\end_inset

 are infinite.
 Indeed, assume for a contradiction that 
\begin_inset Formula $1/10$
\end_inset

 has a finite binary representation.
 Then this binary representation must have the form 
\begin_inset Formula $0.a_{1}\cdots a_{n}$
\end_inset

 since 
\begin_inset Formula $1/10<1$
\end_inset

 and where we may assume that 
\begin_inset Formula $a_{n}\neq0$
\end_inset

.
 Then
\begin_inset Formula 
\begin{align*}
\frac{1}{10} & =\sum_{i=1}^{n}a_{i}2^{-i}\\
 & =2^{-n}\left(\sum_{i=1}^{n}a_{i}2^{n-i}\right)
\end{align*}

\end_inset

implies
\begin_inset Formula 
\begin{equation}
10\left(\sum_{i=1}^{n}a_{i}2^{n-i}\right)=2^{n},\label{eq:5dividess}
\end{equation}

\end_inset

which is a contradiction since 
\begin_inset Formula $5$
\end_inset

 divides the left-hand side of 
\begin_inset ERT
status open

\begin_layout Plain Layout

(
\backslash
ref{eq:5dividess})
\end_layout

\end_inset

 but does not divide the right-hand side of 
\begin_inset ERT
status open

\begin_layout Plain Layout

(
\backslash
ref{eq:5dividess})
\end_layout

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

On the other hand, if a number has a finite binary representation, then
 it necessarily has a finite decimal representation.
 Indeed, if 
\begin_inset Formula $\sum_{i=-m}^{n}a_{i}2^{i}$
\end_inset

 is any number which has a finite binary representation, then first note
 that
\begin_inset Formula 
\begin{align*}
\sum_{i=-m}^{n}a_{i}2^{i} & =\sum_{i=0}^{n}a_{i}2^{i}+\sum_{i=1}^{m}a_{-i}2^{-i}\\
 & =\sum_{i=0}^{n}a_{i}2^{i}+2^{-n}\left(\sum_{j=1}^{m}a_{m-j}2^{j}\right).
\end{align*}

\end_inset

Now note that 
\begin_inset Formula $1/2$
\end_inset

 has finite decimal representation (
\begin_inset Formula $1/2=0.5)$
\end_inset

.
 Thus 
\begin_inset Formula $(1/2)^{n}=(0.5)^{n}$
\end_inset

 also has finite decimal representation.
 The sum of two finite decimal representations is a finite decimal representatio
n and the product of two finite decimal representations is a finite decimal
 representation.
 It follows that 
\begin_inset Formula $\sum_{i=-m}^{n}a_{i}2^{i}$
\end_inset

 has a finite decimal representation.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{sol}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Problem 4
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{ex}
\backslash
label{ex}
\end_layout

\end_inset

 Write a MATLAB function 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

function B=tobinary(n)
\end_layout

\end_inset

 that converts a positive, whole number 
\begin_inset Formula $n$
\end_inset

 into binary format.
 Here, 
\begin_inset Formula $B$
\end_inset

 is an array of appropriate length that contains values of 
\begin_inset Formula $1$
\end_inset

 and 
\begin_inset Formula $0$
\end_inset

.
 You may use 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

log2(n)
\end_layout

\end_inset

 once to figure out the largest power of two that fits into 
\begin_inset Formula $n$
\end_inset

.
 After that, only use simple arithmetic and comparisons (ignore that there
 are more efficient routines in MATLAB, that could help you here).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{ex}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{sol}
\backslash
label{sol}
\end_layout

\end_inset

 We design an algorithm as follows: let 
\begin_inset Formula $n$
\end_inset

 be a positive integer.
 Using the fact that 
\begin_inset Formula $\mathbb{Z}$
\end_inset

 is a Euclidean domain with respect to the usual absolute value, we can
 express 
\begin_inset Formula $n$
\end_inset

 as
\begin_inset Formula 
\begin{equation}
n=q_{1}2+r_{0}\label{eq:0step}
\end{equation}

\end_inset

where 
\begin_inset Formula $0\leq q_{1}<n$
\end_inset

 and 
\begin_inset Formula $r_{0}\in\{0,1\}$
\end_inset

.
 If 
\begin_inset Formula $q_{1}<2$
\end_inset

, then from 
\begin_inset ERT
status open

\begin_layout Plain Layout

(
\backslash
ref{eq:0step})
\end_layout

\end_inset

 we see that the string 
\begin_inset Formula $q_{1}r_{0}$
\end_inset

 gives a binary representation for 
\begin_inset Formula $n$
\end_inset

, and so the algorithm terminates at the 
\begin_inset Formula $0$
\end_inset

th step with the output given in the form of an array as 
\begin_inset Formula $[q_{1},r_{0}]$
\end_inset

.
 If 
\begin_inset Formula $q_{1}\geq2$
\end_inset

, then we proceed to the 
\begin_inset Formula $1$
\end_inset

st step of the algorithm and express 
\begin_inset Formula $q_{1}$
\end_inset

 as
\begin_inset Formula 
\[
q_{1}=q_{2}2+r_{1}
\]

\end_inset

where 
\begin_inset Formula $0\leq q_{2}<q_{1}$
\end_inset

 and 
\begin_inset Formula $r_{1}\in\{0,1\}$
\end_inset

.
 If 
\begin_inset Formula $q_{2}<2$
\end_inset

, then since
\begin_inset Formula 
\begin{align*}
n & =q_{1}2+r_{0}\\
 & =(q_{2}2+r_{1})2+r_{0}\\
 & =q_{2}2^{2}+r_{1}2+r_{0},
\end{align*}

\end_inset

we see that the string 
\begin_inset Formula $q_{2}r_{1}r_{0}$
\end_inset

 gives a binary representation for 
\begin_inset Formula $n$
\end_inset

, and so the algorithm terminates at the 
\begin_inset Formula $1$
\end_inset

st step with the output in the form of an array as 
\begin_inset Formula $[q_{2},r_{1},r_{0}]$
\end_inset

.
 If 
\begin_inset Formula $q_{2}\geq2$
\end_inset

, then we proceed to the 
\begin_inset Formula $2$
\end_inset

nd step.
 At the 
\begin_inset Formula $i$
\end_inset

th step of this algorithm, where 
\begin_inset Formula $i\geq1$
\end_inset

 and 
\begin_inset Formula $q_{i-1}\geq2$
\end_inset

, we express 
\begin_inset Formula $q_{i}$
\end_inset

 as
\begin_inset Formula 
\[
q_{i}=q_{i+1}2+r_{i}
\]

\end_inset

where 
\begin_inset Formula $0\leq q_{i+1}<q_{i}$
\end_inset

 and 
\begin_inset Formula $r_{i}\in\{0,1\}$
\end_inset

.
 Since the sequence 
\begin_inset Formula $(q_{i})$
\end_inset

 is a strictly decreasing sequence of positive integers, there must exist
 a 
\begin_inset Formula $k\in\mathbb{N}$
\end_inset

 such that 
\begin_inset Formula $q_{k+1}<2$
\end_inset

 and 
\begin_inset Formula $q_{i}\geq2$
\end_inset

 for all 
\begin_inset Formula $0\leq i\leq k$
\end_inset

.
 In this case, by an induction argument, we see that
\begin_inset Formula 
\begin{align*}
n & =q_{1}2+r_{0}\\
 & =\left(q_{k+1}2^{k}+\sum_{i=0}^{k-1}r_{i+1}2^{i}\right)2+r_{0}\\
 & =q_{k+1}2^{k+1}+\sum_{i=0}^{k-1}r_{i+1}2^{i+1}+r_{0}\\
 & =q_{k+1}2^{k+1}+\sum_{i=0}^{k}r_{i}2^{k}.
\end{align*}

\end_inset

Thus the string 
\begin_inset Formula $q_{k+1}r_{k}\cdots r_{0}$
\end_inset

 gives a binary representation for 
\begin_inset Formula $n$
\end_inset

, and so the algorithm terminates at the 
\begin_inset Formula $k$
\end_inset

th step with the output in the form of an array as 
\begin_inset Formula $[q_{k+1},r_{k},\dots,r_{0}]$
\end_inset

.
 The code which performs this algorithm is given below
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

function B = tobinary(n)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	i = 1; 	
\end_layout

\begin_layout Plain Layout

	q = floor(n/2); 
\end_layout

\begin_layout Plain Layout

	r = n - 2*q;
\end_layout

\begin_layout Plain Layout

	B(1) = r; 
\end_layout

\begin_layout Plain Layout

	while 2 <= q     
\end_layout

\begin_layout Plain Layout

		n = q;     
\end_layout

\begin_layout Plain Layout

		i = i + 1;     
\end_layout

\begin_layout Plain Layout

		q = floor(n/2);     
\end_layout

\begin_layout Plain Layout

		r = n - 2*q;     
\end_layout

\begin_layout Plain Layout

		B(i) = r; 
\end_layout

\begin_layout Plain Layout

	end 
\end_layout

\begin_layout Plain Layout

	B(i + 1) = q; 
\end_layout

\begin_layout Plain Layout

	B = fliplr(B);
\end_layout

\begin_layout Plain Layout

end
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{sol}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
