option(prot);
int t=timer;
system("--ticks-per-sec", 100); // give time in 1/100 sec
ring R=0,(x,c(1..2)(1..2)(1..2)),lp;
matrix a[2][2] = x,1,0,1;
ideal I;
for(int i1 = 1; i1 <= 2; i1++)
{for(int i2 = 1; i2 <= 2; i2++)
{for(int i3 = 1; i3 <= 2; i3++)
{for(int k = 1; k <= 2; k++)
    {
    poly h(i1)(i2)(i3)(k);
    for (int j1 = 1; j1 <= 2; j1++)
    {for (int k1 = 1; k1 <= 2; k1++)
        {
        h(i1)(i2)(i3)(k) = h(i1)(i2)(i3)(k) + a[j1,i1]*c(k1)(i2)(i3)*c(k)(j1)(k1) 
        - a[j1,i3]*c(k1)(i1)(i2)*c(k)(k1)(j1);
        }}
    I=I+h(i1)(i2)(i3)(k);
    }}}};


// homassociative law


I = std(I);
ring A=0,(x,x1,x2,x3,x4,x5,x6,x7,x8),lp;
ideal M = fetch(R,I);
LIB "primdec.lib";
minAssGTZ(M);


//[1]:
//   _[1]=x7
//   _[2]=x6
//   _[3]=x5
//   _[4]=x4-x8
//   _[5]=x3
//   _[6]=x2-x8
//   _[7]=x1
//[2]:
//   _[1]=x7
//   _[2]=x6
//   _[3]=x5
//   _[4]=x4-x8
//   _[5]=x3-x8
//   _[6]=x2
//   _[7]=x1
//[3]:
//   _[1]=x7
//   _[2]=x6
//   _[3]=x5
//   _[4]=x3
//   _[5]=x2
//   _[6]=x1
//[4]:
//   _[1]=x7
//  _[2]=x6
//  _[3]=x5
//  _[4]=x3-x8
//   _[5]=x2-x8
//   _[6]=x1
//[5]:
//   _[1]=x5*x8-x7^2
//   _[2]=x4*x7+x8^2
//   _[3]=x4*x5+x7*x8
//   _[4]=x6-x7
//   _[5]=x3+x8
//   _[6]=x2+x8
//   _[7]=x1+x7






[1]:
   _[1]=x8
   _[2]=x7
   _[3]=x6
   _[4]=x5
   _[5]=x1
   _[6]=y
[2]:
   _[1]=y*x4-x8
   _[2]=-y*x2+x*x8
   _[3]=x*x4-x2
   _[4]=x7
   _[5]=x6
   _[6]=x5
   _[7]=x3
   _[8]=x1
[3]:
   _[1]=y*x4-x8
   _[2]=-y*x3+x*x8
   _[3]=x*x4-x3
   _[4]=x7
   _[5]=x6
   _[6]=x5
   _[7]=x2
   _[8]=x1
[4]:
   _[1]=-x3^2+x1*x4+x3*x8
   _[2]=x*x4-y*x4-x3+x8
   _[3]=x*x3-y*x3-x1
   _[4]=x7
   _[5]=x6
   _[6]=x5
   _[7]=x2-x3
[5]:
   _[1]=x7
   _[2]=x6
   _[3]=x5
   _[4]=x3
   _[5]=x2
   _[6]=x1
[6]:
   _[1]=y*x3+x1
   _[2]=x7
   _[3]=x6
   _[4]=x5
   _[5]=x2-x3
   _[6]=x
[7]:
   _[1]=-y*x3+x*x8
   _[2]=x7
   _[3]=x6
   _[4]=x5
   _[5]=x2-x3
   _[6]=x1
[8]:
   _[1]=x4*x5+x7*x8
   _[2]=-x4*x7+x3*x8
   _[3]=x3*x5+x7^2
   _[4]=x6-x7
   _[5]=x2-x3
   _[6]=x1+x7
   _[7]=y
[9]:
   _[1]=-x4*x7+x3*x8
   _[2]=-x4*x5+x1*x8
   _[3]=-x3*x5+x1*x7
   _[4]=y*x4*x7+y*x8^2+x1*x8+x7*x8
   _[5]=y*x3+y*x8+x1+x7
   _[6]=x6-x7
   _[7]=x2-x3
   _[8]=x
[10]:
   _[1]=-x7^2+x5*x8
   _[2]=-x4*x7+x3*x8
   _[3]=-x4*x5+x3*x7
   _[4]=-x4*x5+x1*x8
   _[5]=-x3*x5+x1*x7
   _[6]=-x3^2+x1*x4
   _[7]=x*x8-y*x8-x7
   _[8]=x*x7-y*x7-x5
   _[9]=x*x4-y*x4-x3
   _[10]=x*x3-y*x3-x1
   _[11]=x6-x7
   _[12]=x2-x3
[11]:
   _[1]=-x7^2+x5*x8
   _[2]=x4*x7+x8^2
   _[3]=x4*x5+x7*x8
   _[4]=x3+x8
   _[5]=x1+x7
   _[6]=x6-x7
   _[7]=x2-x3
[12]:
   _[1]=x4^2*x5^2-2*x3*x4*x5*x7-4*x4*x7^3+x3^2*x5*x8+4*x4*x5*x7*x8+2*x3*x7^2*x8-2*x3*x5*x8^2-x7^2*x8^2+x5*x8^3
   _[2]=-x3^2*x5+x1*x4*x5+x4*x5*x7-2*x3*x7^2+x1*x7*x8-x7^2*x8+x5*x8^2
   _[3]=x3*x4*x5-2*x1*x4*x7-2*x4*x7^2+x1*x3*x8+x4*x5*x8+2*x3*x7*x8-x1*x8^2
   _[4]=x1*x4*x5-2*x1*x3*x7+x4*x5*x7-4*x3*x7^2+x1^2*x8+2*x3*x5*x8+x1*x7*x8-2*x7^2*x8+2*x5*x8^2
   _[5]=-x1*x3^2+x1^2*x4+x3*x4*x5-2*x3^2*x7-x4*x7^2+x1*x3*x8+x4*x5*x8
   _[6]=y*x4^2*x5^2+4*y*x4*x7^3-2*y*x4*x5*x7*x8+y*x7^2*x8^2+2*x4*x5*x7^2-x4*x5^2*x8-x3*x5*x7*x8-2*x7^3*x8+2*x5*x7*x8^2
   _[7]=-y*x4*x5+y*x3*x7-x7^2+x5*x8
   _[8]=y*x3*x4*x5+4*y*x4*x7^2-2*y*x3*x7*x8+y*x7*x8^2+x4*x5*x7-x3*x5*x8
   _[9]=y*x3^2+4*y*x4*x7-2*y*x3*x8+y*x8^2+x4*x5-x3*x7
   _[10]=4*y*x4*x5*x7-4*y*x3*x7^2-2*y*x3*x5*x8+2*y*x1*x7*x8-2*y*x7^2*x8+2*y*x5*x8^2+x4*x5^2-2*x3*x5*x7+x1*x5*x8
   _[11]=-2*y*x3^2+2*y*x1*x4-2*y*x4*x7+2*y*x3*x8-x4*x5+2*x3*x7-x1*x8
   _[12]=y*x1*x3+y*x4*x5+2*y*x3*x7-y*x1*x8+y*x7*x8+x3*x5-x1*x7
   _[13]=-y*x3*x5+y*x1*x7-x*x7^2+x*x5*x8
   _[14]=2*x*x4*x7-2*y*x4*x7+2*x*x8^2-2*y*x8^2-x4*x5-x1*x8-2*x7*x8
   _[15]=x*x4*x5-y*x4*x5+x*x7*x8-y*x7*x8-x3*x5-2*x7^2+x5*x8
   _[16]=x*x3-y*x3+x*x8-y*x8-x1-x7
   _[17]=x*x1*x8-y*x1*x8+x*x7*x8-y*x7*x8+x3*x5-2*x1*x7-2*x7^2+x5*x8
   _[18]=-y*x1^2+x*x1*x7-3*y*x1*x7+3*x*x7^2-2*x*x5*x8-2*y*x5*x8-x1*x5-x5*x7
   _[19]=2*x*x1*x4-2*y*x1*x4-2*x*x8^2+2*y*x8^2-2*x1*x3+x4*x5-4*x3*x7+3*x1*x8+2*x7*x8
   _[20]=2*x*y*x8-2*y^2*x8-y*x1+x*x7-4*y*x7-x5
   _[21]=2*y^2*x3*x5-2*y^2*x1*x7+2*x*y*x7^2-2*y^2*x5*x8-y*x1*x5+x*x5*x7-4*y*x5*x7-x5^2
   _[22]=2*x*y*x4-2*y^2*x4-y*x3-x*x8+2*y*x8+x7
   _[23]=x^2*x8-2*x*y*x8+y^2*x8-2*x*x7+2*y*x7+x5
   _[24]=-x*y*x1+y^2*x1+x^2*x7-x*y*x7-x*x5-y*x5
   _[25]=x^2*x4-y^2*x4-y*x3+x*x8-x1-x7
   _[26]=x6-x7
   _[27]=x2-x3
[13]:
   _[1]=y*x4*x5+y*x7*x8+x7^2-x5*x8
   _[2]=x6-x7
   _[3]=x3+x8
   _[4]=x2+x8
   _[5]=x1+x7
   _[6]=x+y
[14]:
   _[1]=x3*x5+x7^2
   _[2]=x6-x7
   _[3]=x2-x3
   _[4]=x1+x7
   _[5]=y
   _[6]=x
[15]:
   _[1]=-x4*x5^2+x3*x5*x7+x7^3-x5*x7*x8
   _[2]=-x3*x5+x1*x7
   _[3]=-x3^2*x5+x1*x4*x5-x3*x7^2+x1*x7*x8
   _[4]=-x1*x3^2+x1^2*x4-x3^2*x7+x1*x3*x8
   _[5]=x*x7-x5
   _[6]=x*x4*x5-x1*x7-x7^2+x5*x8
   _[7]=x*x3-x1
   _[8]=x*x1*x4-x1*x3-x3*x7+x1*x8
   _[9]=x^2*x4+x*x8-x1-x7
   _[10]=x6-x7
   _[11]=x2-x3
   _[12]=y
[16]:
   _[1]=-x4*x6+x3*x8-x8^2
   _[2]=-x3*x6+x1*x8
   _[3]=-x3^2+x1*x4+x3*x8
   _[4]=y*x4-x8
   _[5]=y*x3-y*x8-x6
   _[6]=x*x8-y*x8-x6
   _[7]=-y*x1+x*x6
   _[8]=x*x4-x3
   _[9]=x*x3-y*x8-x1-x6
   _[10]=x7
   _[11]=x5
   _[12]=x2-x3+x8
[17]:
   _[1]=-x4*x7+x3*x8
   _[2]=-x3*x7+x1*x8-x7*x8
   _[3]=-x3^2+x1*x4-x3*x8
   _[4]=y*x4-x8
   _[5]=y*x3-x7
   _[6]=x*x8-y*x8-x7
   _[7]=-y*x1+x*x7
   _[8]=x*x4-x3-x8
   _[9]=x*x3-x1
   _[10]=x6
   _[11]=x5
   _[12]=x2-x3-x8
[18]:
   _[1]=x4^2*x5+x4*x6*x8+x4*x7*x8+x8^3
   _[2]=-x4*x7+x3*x8
   _[3]=x3*x4*x5+x4*x6*x7+x3*x7*x8+x7*x8^2
   _[4]=x3^2*x5+x3*x6*x7+x3*x7^2+x7^2*x8
   _[5]=-x4*x6+x2*x8
   _[6]=-x3*x6+x2*x7
   _[7]=x2*x4*x5+x2*x6*x8+x2*x7*x8+x6*x8^2
   _[8]=x2*x3*x5+x2*x6*x7+x2*x7^2+x6*x7*x8
   _[9]=x2^2*x5+x2*x6^2+x2*x6*x7+x6^2*x8
   _[10]=-x4*x5+x1*x8
   _[11]=-x3*x5+x1*x7
   _[12]=-x2*x5+x1*x6
   _[13]=x1*x4+x2*x8+x3*x8+x8^2
   _[14]=x1*x3+x2*x7+x3*x7+x7*x8
   _[15]=x1*x2+x2*x6+x2*x7+x6*x8
   _[16]=x1^2+x1*x6+x1*x7+x5*x8
   _[17]=y*x8+x1+x6+x7
   _[18]=y*x4-x8
   _[19]=y*x3-x7
   _[20]=y*x2-x6
   _[21]=y*x1-x5
   _[22]=x